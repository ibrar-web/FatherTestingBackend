name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Allows manual triggering

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1 # Artifact Registry location
  SERVICE: feathers-backend # Cloud Run service name
  REGION: us-central1 # Cloud Run service region

jobs:
  # Job 1: Run tests
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test

  # Job 2: Build and push Docker image to Artifact Registry
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    outputs:
      image: ${{ steps.image.outputs.image }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Docker Auth
      id: docker-auth
      uses: 'docker/login-action@v3'
      with:
        registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
        username: _json_key
        password: '${{ secrets.GCP_SA_KEY }}'

    - name: Build and Push Container
      run: |-
        docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/feathers-repo/${{ env.SERVICE }}:${{ github.sha }}" --target production .
        docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/feathers-repo/${{ env.SERVICE }}:${{ github.sha }}"

    - name: Set image output
      id: image
      run: echo "image=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/feathers-repo/${{ env.SERVICE }}:${{ github.sha }}" >> $GITHUB_OUTPUT

  # Job 3: Deploy to Cloud Run
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE }}
        region: ${{ env.REGION }}
        image: ${{ needs.build-and-push.outputs.image }}
        flags: |
          --port=3031
          --memory=512Mi
          --cpu=1
          --min-instances=0
          --max-instances=10
          --allow-unauthenticated
          --set-env-vars=NODE_ENV=production,PORT=3031

    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}

    - name: Create deployment summary
      run: |
        echo "## ðŸš€ Deployment Successful!" >> $GITHUB_STEP_SUMMARY
        echo "- **Service**: ${{ env.SERVICE }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Region**: ${{ env.REGION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **URL**: ${{ steps.deploy.outputs.url }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Image**: ${{ needs.build-and-push.outputs.image }}" >> $GITHUB_STEP_SUMMARY
